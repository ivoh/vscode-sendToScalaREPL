{
    "name": "sendtoterminalplus",
    "displayName": "SendToTerminal+",
    "description": "Sends selected text to Terminal. Customizable support for multiline statements of languages REPLs (e.g. :paste/EOT in Scala).",
    "version": "0.1.4",
    "publisher": "ivoh",
    "icon": "images/Terminalicon2.png",
    "engines": {
        "vscode": "^1.27.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "terminal",
        "scala",
        "repl",
        "console"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/ivoh/vscode-sendToTerminalPlus"
    },
    "activationEvents": [
        "onCommand:extension.sendToTerminalPlus"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.sendToTerminalPlus",
                "title": "Send Customized Text To Terminal"
            }
        ],
        "keybindings": [
            {
                "command": "extension.sendToTerminalPlus",
                "key": "shift+alt+enter",
                "when": "editorFocus && !findWidgetVisible"
            }
        ],
        "configuration": [
            {
                "title": "Send To Terminal Plus",
                "properties": {
                    "sendtoterminalplus.dynamicconfiguration": {
                        "type": "boolean",
                        "description": "Should load configuration with each sending.",
                        "default": false
                    },
                    "sendtoterminalplus.languages": {
                        "type": "array",
                        "description": "Setting for languages",
                        "items": {
                            "type": "object",
                            "properties": {
                                "langId": {
                                    "type": "string",
                                    "description": "Id of language (e.g. 'scala', 'fsharp', etc...) of the current document. Use 'default' for the rest."
                                },
                                "shouldSendSelectionPerLines": {
                                    "type": "boolean",
                                    "description": "Send the selected text to terminal line by line"
                                },
                                "noSelectionPayload": {
                                    "type": "array",
                                    "description": "Predefined lines send if there is no text selected.",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "oneLineSelectionPayload": {
                                    "type": "array",
                                    "description": "Predefined lines send if the selection is single line. Can use replacement patterns. {selection} is used for block selection.",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "multiLineSelectionPayload": {
                                    "type": "array",
                                    "description": "Predefined lines send if the selection is block of lines. Can use replacement patterns. {selection} is used for block selection. Can be multiline even if shouldSendSelectionPerLines.",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "default": [
                            {
                                "langId": "default",
                                "shouldSendSelectionPerLines": false,
                                "multiLineSelectionPart": [
                                    "{selection}"
                                ],
                                "multiLineSelectionPart2": [
                                    "t({selection});"
                                ],
                                "noSelectionPayload": [
                                    "{line}"
                                ],
                                "oneLineSelectionPayload": [
                                    "{selection}"
                                ],
                                "multiLineSelectionPayload": [
                                    "{selection}"
                                ]
                            },
                            {
                                "langId": "scala",
                                "shouldSendSelectionPerLines": true,
                                "noSelectionPayload": [
                                    "{line}"
                                ],
                                "oneLineSelectionPayload": [
                                    "{selection}"
                                ],
                                "multiLineSelectionPayload": [
                                    ":paste",
                                    "{selection}",
                                    "\u0004"
                                ]
                            },
                            {
                                "langId": "python",
                                "shouldSendSelectionPerLines": true,
                                "noSelectionPayload": [
                                    "{line}"
                                ],
                                "oneLineSelectionPayload": [
                                    "{selection}"
                                ],
                                "multiLineSelectionPayload": [
                                    "{selection}",
                                    ""
                                ]
                            }
                        ]
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "typescript": "^2.6.1",
        "vscode": "^1.1.21",
        "tslint": "^5.8.0",
        "@types/node": "^8.10.25",
        "@types/mocha": "^2.2.42"
    },
    "license": "LICENSE"
}
